 public class NumMatrix
    {
        int[][] sumRange;
        public NumMatrix(int[][] matrix)
        {
            sumRange = new int[matrix.Length][];
            for (int i = 0; i <= matrix.Length - 1; i++)
            {
                sumRange[i] = new int[matrix[0].Length];
                for (int j = 0; j <= matrix[0].Length - 1; j++)
                {
                    if (i == 0 && j == 0)
                    {
                        sumRange[0][0] = matrix[0][0];
                    }
                    else
                    {
                        int res = 0;
                        if (i > 0&&j>0)
                        {
                            res = sumRange[i - 1][j] + sumRange[i][j - 1]+matrix[i][j] - sumRange[i - 1][j - 1];
                        }
                        if (i == 0)
                        {
                            res = sumRange[i][j - 1] + matrix[i][j];
                        }
                        if (j == 0)
                        {
                            res=sumRange[i-1][j] + matrix[i][j];
                        }
                        sumRange[i][j] = res;
                    }
                }
            }
        }

        public int SumRegion(int row1, int col1, int row2, int col2)
        {
            int res = sumRange[row2][col2];
            if (row1 > 0)
            {
                res=res - sumRange[row1-1][col2];
            }
            if (col1 > 0)
            {
                res = res - sumRange[row2][col1 - 1];
            }
            if (col1 > 0 && row1 > 0)
            {
                res = res + sumRange[row1 - 1][col1 - 1];
            }
            return res;
        }
    }
//就。。。参考之前的数组不可变，把多次调用的位置降低压力
